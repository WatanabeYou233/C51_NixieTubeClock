C51 COMPILER V9.55   DS1302                                                                12/15/2021 23:50:00 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: E:\Keilv5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE MODP2 DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\DS1302.lst) TABS(2) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include <STC8.H>
   2          #include <Delay.h>
   3          #include <uart.h>
   4          #include <ds1302.h>
   5          
   6          
   7          //引脚定义
   8          sbit DS1302_SCLK=P1^3;
   9          sbit DS1302_IO=P1^2;
  10          sbit DS1302_CE=P1^6;
  11          
  12          
  13          
  14          //时间数组，索引0~6分别为年、月、日、时、分、秒、星期
  15          unsigned char DS1302_Time[13]={0x21,0x11,0x14,0x01,0x27,0x40,0x06,'\0'};
  16          
  17          /**
  18            * @brief  DS1302初始化
  19            * @param  无
  20            * @retval 无
  21            */
  22          void DS1302_Init(void)
  23          {
  24   1        DS1302_CE=0;
  25   1        DS1302_SCLK=0;
  26   1      }
  27          
  28          /**
  29            * @brief  DS1302写一个字节
  30            * @param  Command 命令字/地址
  31            * @param  Data 要写入的数据
  32            * @retval 无
  33            */
  34          void DS1302_WriteByte(unsigned char Command,Data)
  35          {
  36   1        unsigned char i;
  37   1        DS1302_CE=1;
  38   1        for(i=0;i<8;i++)
  39   1        {
  40   2          DS1302_IO=Command&(0x01<<i);
  41   2          DS1302_SCLK=1;
  42   2          Delay1us(1);
  43   2          DS1302_SCLK=0;
  44   2          Delay1us(1);
  45   2        }
  46   1        for(i=0;i<8;i++)
  47   1        {
  48   2          DS1302_IO=Data&(0x01<<i);
  49   2          DS1302_SCLK=1;
  50   2          Delay1us(1);
  51   2          DS1302_SCLK=0;
  52   2          Delay1us(1);
  53   2        }
  54   1        DS1302_CE=0;
C51 COMPILER V9.55   DS1302                                                                12/15/2021 23:50:00 PAGE 2   

  55   1      }
  56          
  57          /**
  58            * @brief  DS1302读一个字节
  59            * @param  Command 命令字/地址
  60            * @retval 读出的数据
  61            */
  62          unsigned char DS1302_ReadByte(unsigned char Command) 
  63          {
  64   1        unsigned char i,Data=0x00;
  65   1        Command|=0x01;  //将指令转换为读指令
  66   1        DS1302_CE=1;
  67   1        for(i=0;i<8;i++)
  68   1        {
  69   2          DS1302_IO=Command&(0x01<<i);
  70   2          DS1302_SCLK=0;
  71   2          Delay1us(1);
  72   2          DS1302_SCLK=1;
  73   2          Delay1us(1);
  74   2        }
  75   1        for(i=0;i<8;i++)
  76   1        {
  77   2          DS1302_SCLK=1;
  78   2          Delay1us(1);
  79   2          DS1302_SCLK=0;
  80   2          Delay1us(1);
  81   2          if(DS1302_IO){Data|=(0x01<<i);}
  82   2        }
  83   1        DS1302_CE=0;
  84   1        DS1302_IO=0;  //读取后将IO设置为0，否则读出的数据会出错
  85   1        return Data;
  86   1      }
  87          
  88          /**
  89            * @brief  DS1302设置时间，调用之后，DS1302_Time数组的数字会被设置到DS1302中
  90            * @param  无
  91            * @retval 无
  92            */
  93          void DS1302_SetTime(void)
  94          {
  95   1        DS1302_WriteByte(DS1302_WP,0x00);
  96   1        DS1302_WriteByte(DS1302_YEAR,DS1302_Time[0]/10*16+DS1302_Time[0]%10);//十进制转BCD码后写入
  97   1        DS1302_WriteByte(DS1302_MONTH,DS1302_Time[1]/10*16+DS1302_Time[1]%10);
  98   1        DS1302_WriteByte(DS1302_DATE,DS1302_Time[2]/10*16+DS1302_Time[2]%10);
  99   1        DS1302_WriteByte(DS1302_HOUR,DS1302_Time[3]/10*16+DS1302_Time[3]%10);
 100   1        DS1302_WriteByte(DS1302_MINUTE,DS1302_Time[4]/10*16+DS1302_Time[4]%10);
 101   1        DS1302_WriteByte(DS1302_SECOND,DS1302_Time[5]/10*16+DS1302_Time[5]%10);
 102   1        DS1302_WriteByte(DS1302_DAY,DS1302_Time[6]/10*16+DS1302_Time[6]%10);
 103   1        DS1302_WriteByte(DS1302_WP,0x80);
 104   1      }
 105          
 106          void DS1302_SetTimeBCD(void)
 107          {
 108   1        DS1302_WriteByte(DS1302_WP,0x00);
 109   1        DS1302_WriteByte(DS1302_YEAR,DS1302_Time[0]);//   BCD码写入
 110   1        DS1302_WriteByte(DS1302_MONTH,DS1302_Time[1]);
 111   1        DS1302_WriteByte(DS1302_DATE,DS1302_Time[2]);
 112   1        DS1302_WriteByte(DS1302_HOUR,DS1302_Time[3]);    //DS1302_Time[3] = DS1302_TimeBCD[0];
 113   1        DS1302_WriteByte(DS1302_MINUTE,DS1302_Time[4]);  //DS1302_Time[4] = DS1302_TimeBCD[1];
 114   1        DS1302_WriteByte(DS1302_SECOND,DS1302_Time[5]); //DS1302_Time[5] = DS1302_TimeBCD[0];
 115   1        DS1302_WriteByte(DS1302_DAY,DS1302_Time[6]);
 116   1        DS1302_WriteByte(DS1302_WP,0x80);
C51 COMPILER V9.55   DS1302                                                                12/15/2021 23:50:00 PAGE 3   

 117   1      }
 118          
 119          
 120          /**
 121            * @brief  DS1302读取时间，调用之后，DS1302中的数据会被读取到DS1302_Time数组中
 122            * @param  无
 123            * @retval 无
 124            */
 125          void DS1302_ReadTime(void)
 126          {
 127   1        unsigned char Temp;
 128   1        Temp=DS1302_ReadByte(DS1302_YEAR);
 129   1        DS1302_Time[0]=Temp/16*10+Temp%16;//BCD码转十进制后读取
 130   1        Temp=DS1302_ReadByte(DS1302_MONTH);
 131   1        DS1302_Time[1]=Temp/16*10+Temp%16;
 132   1        Temp=DS1302_ReadByte(DS1302_DATE);
 133   1        DS1302_Time[2]=Temp/16*10+Temp%16;
 134   1        Temp=DS1302_ReadByte(DS1302_HOUR);
 135   1        DS1302_Time[3]=Temp/16*10+Temp%16;
 136   1        Temp=DS1302_ReadByte(DS1302_MINUTE);
 137   1        DS1302_Time[4]=Temp/16*10+Temp%16;
 138   1        Temp=DS1302_ReadByte(DS1302_SECOND);
 139   1        DS1302_Time[5]=Temp/16*10+Temp%16;
 140   1        Temp=DS1302_ReadByte(DS1302_DAY);
 141   1        DS1302_Time[6]=Temp/16*10+Temp%16;
 142   1      }
 143          
 144          
 145          void DS1302_ReadTimeBCD(void)    //读取BCD码到DS1302_Time数组
 146          {
 147   1        unsigned char Temp;
 148   1        Temp=DS1302_ReadByte(DS1302_YEAR);
 149   1        DS1302_Time[0]=Temp;
 150   1        Temp=DS1302_ReadByte(DS1302_MONTH);
 151   1        DS1302_Time[1]=Temp;
 152   1        Temp=DS1302_ReadByte(DS1302_DATE);
 153   1        DS1302_Time[2]=Temp;
 154   1        Temp=DS1302_ReadByte(DS1302_HOUR);
 155   1        DS1302_Time[3]=Temp;
 156   1        Temp=DS1302_ReadByte(DS1302_MINUTE);
 157   1        DS1302_Time[4]=Temp;
 158   1        Temp=DS1302_ReadByte(DS1302_SECOND);
 159   1        DS1302_Time[5]=Temp;
 160   1        Temp=DS1302_ReadByte(DS1302_DAY);
 161   1        DS1302_Time[6]=Temp;
 162   1      }
 163          
 164          void DS1302_ReadTimeASCII(void)     //读取ASCII码到DS1302_Time数组
 165          {
 166   1        unsigned char Temp;
 167   1        Temp=DS1302_ReadByte(DS1302_YEAR);
 168   1        DS1302_Time[0]=((Temp&0XF0)>>4)+0X30;
 169   1        DS1302_Time[1]=(Temp&0X0F)+0X30;
 170   1        Temp=DS1302_ReadByte(DS1302_MONTH);
 171   1        DS1302_Time[2]=((Temp&0XF0)>>4)+0X30;
 172   1        DS1302_Time[3]=(Temp&0X0F)+0X30;
 173   1        Temp=DS1302_ReadByte(DS1302_DATE);
 174   1        DS1302_Time[4]=((Temp&0XF0)>>4)+0X30;
 175   1        DS1302_Time[5]=(Temp&0X0F)+0X30;
 176   1        Temp=DS1302_ReadByte(DS1302_HOUR);
 177   1        DS1302_Time[6]=((Temp&0XF0)>>4)+0X30;
 178   1        DS1302_Time[7]=(Temp&0X0F)+0X30;
C51 COMPILER V9.55   DS1302                                                                12/15/2021 23:50:00 PAGE 4   

 179   1        Temp=DS1302_ReadByte(DS1302_MINUTE);
 180   1        DS1302_Time[8]=((Temp&0XF0)>>4)+0X30;
 181   1        DS1302_Time[9]=(Temp&0X0F)+0X30;
 182   1        Temp=DS1302_ReadByte(DS1302_SECOND);
 183   1        DS1302_Time[10]=((Temp&0XF0)>>4)+0X30;
 184   1        DS1302_Time[11]=(Temp&0X0F)+0X30;
 185   1      }
 186          
 187          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    905    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
