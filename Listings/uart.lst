C51 COMPILER V9.55   UART                                                                  12/15/2021 23:50:00 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: E:\Keilv5\C51\BIN\C51.EXE uart.c OPTIMIZE(8,SPEED) BROWSE MODP2 DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\uart.lst) TABS(2) OBJECT(.\Objects\uart.obj)

line level    source

   1          #include <string.h>
   2          #include <stdio.h>
   3          #include <STC8.H>
   4          #include <uart.h>
   5          #include <DS1302.H>
   6          
   7          unsigned char xdata ReceiveData[len];   //串口中断接受数据长度len
   8          char code DS1302_Month[12][5] ={{"Jan"},{"Feb"},{"Mar"},{"Apr"},{"May"},{"Jun"},{"Jul"},{"Aug"},{"Sep"},{"
             -Oct"},{"Nov"},{"Dec"}};
   9          char xdata DS1302_MonthRec[5] = {'\0','\0','\0','\0','\0'};
  10          char code DS1302_Day[7][4] = {{"Mon"},{"Tue"},{"Wed"},{"Thu"},{"Fri"},{"Sat"},{"Sun"}};
  11          char xdata DS1302_DayRec[4] = {'\0','\0','\0','\0'};
  12          void Uart2Init(void)    //115200bps@22.1184MHz 初始化串口2
  13          {
  14   1        S2CON = 0x50;   //8位数据,可变波特率
  15   1        AUXR |= 0x04;   //定时器2时钟为Fosc,即1T
  16   1        T2L = 0xD0;   //设定定时初值
  17   1        T2H = 0xFF;   //设定定时初值
  18   1        AUXR |= 0x10;   //启动定时器2
  19   1        IE2 = 0;
  20   1        EA = 1;
  21   1      }
  22          
  23          
  24          void UartInit(void)   //115200bps@22.1184MHz  初始化串口1
  25          {
  26   1        SCON = 0x50;    //8位数据,可变波特率
  27   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
  28   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  29   1        TMOD &= 0x0F;   //设定定时器1为16位自动重装方式
  30   1        TL1 = 0xD0;   //设定定时初值
  31   1        TH1 = 0xFF;   //设定定时初值
  32   1        ET1 = 0;    //禁止定时器1中断
  33   1        TR1 = 1;    //启动定时器1
  34   1        ES = 0;     //禁用串口1中断
  35   1        EA = 1;    //总中断
  36   1        
  37   1      }
  38          
  39          
  40          void sendByte(unsigned char b)  // 串口1发送单个字符
  41          {
  42   1        ES=0;
  43   1        SBUF = b;
  44   1        while(TI == 0);
  45   1        TI = 0;
  46   1        ES=1;
  47   1      }
  48          
  49          void send2Byte(unsigned char b)  // 串口2发送单个字符
  50          {
  51   1        IE2=0;
  52   1        S2BUF = b;
  53   1        while(!(S2CON&S2TI));
C51 COMPILER V9.55   UART                                                                  12/15/2021 23:50:00 PAGE 2   

  54   1        S2CON &= ~0X02;
  55   1        IE2 = ES2;
  56   1      }
  57          
  58          
  59          void sendStr(char *s)  //串口1发送字符串
  60          {
  61   1        while(*s != '\0')
  62   1        {
  63   2          sendByte(*s);
  64   2          s++;
  65   2        }
  66   1      }
  67          
  68          void send2Str(char *s)  //串口2发送字符串 格式:send2Str("指令\r\n")
  69          {
  70   1        while(*s != '\0')
  71   1        {
  72   2          send2Byte(*s);
  73   2          s++;
  74   2        }
  75   1      }
  76          
  77          
  78          
  79          void Uart_Interrupt() interrupt 8     //串口2（连接eps8266）中断服务程序
  80          {
  81   1        char ReceiveDataByte;
  82   1        static unsigned char i=0;
  83   1        unsigned char a,c,d = 0;
  84   1        if(S2CON & 0X01 ) //判断中断类型
  85   1        {
  86   2          S2CON &= ~0X01; //标志位清除
  87   2          ReceiveDataByte = S2BUF;
  88   2          if(ReceiveDataByte == ':' || i>0) // 数据取第一个":"之后的值
  89   2          {
  90   3            ReceiveData[i] = ReceiveDataByte;
  91   3            i++;
  92   3            if(ReceiveDataByte == '\n' || i>=len)    //判断接受字符完成
  93   3            {
  94   4              i = 0;
  95   4              //此处填写接受数据后相应的动作
  96   4              sendStr(ReceiveData);
  97   4              DS1302_Time[0] =  (ReceiveData[23]-0x30)<<4 | (ReceiveData[24]-0x30);
  98   4              DS1302_Time[2] = (ReceiveData[9]-0x30)<<4 | (ReceiveData[10]-0x30);
  99   4              DS1302_Time[3] = (ReceiveData[12]-0x30)<<4 | (ReceiveData[13]-0x30);
 100   4              DS1302_Time[4] = (ReceiveData[15]-0x30)<<4 | (ReceiveData[16]-0x30);
 101   4              DS1302_Time[5] = (ReceiveData[18]-0x30)<<4 | (ReceiveData[19]-0x30);
 102   4              
 103   4              DS1302_DayRec[0] = ReceiveData[1];
 104   4              DS1302_DayRec[1] = ReceiveData[2];
 105   4              DS1302_DayRec[2] = ReceiveData[3];
 106   4              
 107   4              DS1302_MonthRec[0] = ReceiveData[5];
 108   4              DS1302_MonthRec[1] = ReceiveData[6];
 109   4              DS1302_MonthRec[2] = ReceiveData[7];   //以上、下将MCU接收的ASCII码时间转换为BCD码时间
 110   4              memset(ReceiveData,'\0',sizeof(ReceiveData));
 111   4              for (d = 0; d < 7; d++)           //通过Receivedata判断星期并转化为BCD码
 112   4              {
 113   5                if(strstr(DS1302_Day[d],DS1302_DayRec) != NULL)
 114   5                {
 115   6                  c = d+1;
C51 COMPILER V9.55   UART                                                                  12/15/2021 23:50:00 PAGE 3   

 116   6                  DS1302_Time[6] = c/10*16+c%10;
 117   6                }
 118   5              }
 119   4              
 120   4              for (a = 0; a < 12; a++)          //通过Receivedata判断月份并转化为BCD码
 121   4              {
 122   5                if(strstr(DS1302_Month[a],DS1302_MonthRec) != NULL)
 123   5                {
 124   6                  c = a+1;
 125   6                  DS1302_Time[1] = c/10*16+c%10;
 126   6                }
 127   5              }
 128   4              
 129   4              if(DS1302_Time[0] != 0x70)      //判断获取时间是否有效避免1970年
 130   4              {
 131   5                DS1302_SetTimeBCD();  //使用BCD码设置DS1302时间
 132   5              }
 133   4            }
 134   3          }
 135   2        }
 136   1        else
 137   1        {
 138   2          S2CON &= ~0X02;  ////标志位清除
 139   2        }
 140   1      }
 141          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    555    ----
   CONSTANT SIZE    =     88    ----
   XDATA SIZE       =     34    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
